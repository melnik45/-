# factory_pattern.py

class Product:
    def display(self):
        pass

class ConcreteProductA(Product):
    def display(self):
        return "Concrete Product A"

class ConcreteProductB(Product):
    def display(self):
        return "Concrete Product B"

class Creator:
    def factory_method(self):
        pass

    def get_product(self):
        product = self.factory_method()
        return product.display()

class ConcreteCreatorA(Creator):
    def factory_method(self):
        return ConcreteProductA()

class ConcreteCreatorB(Creator):
    def factory_method(self):
        return ConcreteProductB()

def main():
    creator_a = ConcreteCreatorA()
    creator_b = ConcreteCreatorB()

    print(creator_a.get_product())  # Output: Concrete Product A
    print(creator_b.get_product())  # Output: Concrete Product B

